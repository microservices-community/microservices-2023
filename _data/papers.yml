# 1
- authors:
    - Michele Danieli
    - Giuseppe De Palma (Presenting)
  title: Energy-Consumption Analysis forCloud-Native Development Approaches
  paper: 03-danieli-energy-consumption.pdf
  size: long
  #  slides: empty_slides.pdf
  abstract: |
    Energy consumption analysis of cloud computing approaches (microservices, serverless computing, and WebAssembly-based serverless)    provides insights for informed decision-making in application design, platform selection, and energy efficiency.    We analyse an application use case and compare its energy consumption across the three approaches:    containerized service-oriented application, serverless app on OpenWhisk, and on our custom WebAssembly-based serverless platform.
# 2
- authors:
    - Lauren Adams
    - Francis Boyle
    - Patrick Boyle
    - Dario Amoroso D'Aragona
    - Tomas Cerny 
    - Davide Taibi (Presenting)
  title: "ChatGPT for Microservice Development: How far can we go?"
  paper: 08-adams-chatgpt.pdf
  size: long
  #  slides: empty_slides.pdf
  abstract: |
    Both microservices and generative AI play significant roles in code development, prompting the
    question of how generative AI can aid in building a microservice-based system. Although ChatGPT-4
    has been evaluated for structuring microservices and generating code snippets, limited research exists on its ability to fully develop a microservice-based system. This paper aims to evaluate whether
    ChatGPT-4 can construct a complete system with minimal human oversight, using a known development example. To address this objective, we formulated the following research questions (RQs):
 
    - RQ1 Is it possible to fully build a microservices system only using ChatGPT?
    - RQ2 What are the limitations of ChatGPT for building microservice architecture?
    - RQ3 What manual/human interventions are needed?
 
    To achieve this, we conducted a preliminary investigation by attempting to replicate SockShop1,
    a demonstration example of microservices systems, through conversation with ChatGPT-4. The result of this paper will enable a new line of research into the automatic generation of new services or
    automated software maintenance. The remainder of this paper presents related works, the approach
    adopted for building the system, a research roadmap towards automated generative Microservice-based development.
# 3
- authors:
    - Enrique Moguel 
    - Jose Garcia-Alonso (Presenting)
    - Majid Haghparast 
    - Juan M. Murillo
  title: Quantum Microservices Development and Deployment
  paper: 04-moguel-quantum-microservices.pdf
  size: long
  #  slides: empty_slides.pdf
  abstract: |
    Early advances in the field of quantum computing have provided new opportunities to tackle intricate problems in areas as diverse as mathematics, physics, or healthcare. However, the technology required to construct such systems where different pieces of quantum and classical software collaborate is currently lacking. For this reason, significant advancements in quantum service-oriented computing are necessary to enable developers to create and operate quantum services and microservices comparable to their classical counterparts. Therefore, the core objective of this work is to establish the necessary technological infrastructure that enables the application of the benefits and lessons learned from service-oriented computing to the domain of quantum software engineering. Additionally, we have validated the proposal by making use of a modification of the OpenAPI specification, the GitHub Actions, and AWS.
# 4
- authors:
    - Giuseppe De Palma 
    - Saverio Giallorenzo 
    - Matteo Trentin (Presenting)  
    - Gejsi Vjerdha
  title: A Framework for Bridging the Gap between Monolithic and Serverless Programming 
  paper: 16-depalma-framework-monolithic-serverless.pdf
  size: long
  #  slides: empty_slides.pdf
  abstract: |
    The serverless paradigm offers benefits such as time savings and cost efficiency by delegating resource allocation and scaling to the platform. However, as the number of functions and interactions grows, the complexity of reasoning about the implementation correctness increases. Traditional monolithic development provides a more linear and simpler programming experience, with established best practices and tools for various development phases.
    From this observation, we propose Fenrir, an open-source programming framework for programming serverless applications managed as a monolithic codebase. Developers write applications in a monolithic style and then annotate specific parts that should be deployed as separate serverless functions, along with their corresponding call events. The Fenrir compiler uses these annotations to generate a correct-by-construction deployable serverless codebase that adheres to the source program's execution semantics. This approach enables quick development and testing cycles, ensuring that the serverless application behaves as intended.
    We outline the main features of the Fenrir framework, including its annotation constructors and compilation pipeline, and briefly illustrate how Fenrir works with examples.
# 5
- authors:
    - Sebastian Copei (Presenting)
  title: A practical experience report on movingfrom VM to Kubernetes in an academicresearch group 
  paper: 09-copei-experience-report.pdf
  size: long
  #  slides: empty_slides.pdf
  abstract: |
    Using Kubernetes in a productive environment increases the complexity of the needed software stack. Without further maintenance of the software infrastructure, technical debts can quickly arise. With this experience report, we want to outline our migration from classic VMs over Docker to a Kubernetes infrastructure for both providing software for our research projects and also for productive software. Despite all the challenges and barriers, the benefits after a successful migration, such as fast and easy CI/CD or the rollout of any service, are worth it.
# 6
- authors:
    - Ruoyu Su 
    - Xiaozhou Li (Presenting) 
    - Davide Taibi 
  title: "Back to the Future: From Microservice to Monolith"
  paper: 06-su-back-to-the-monolith.pdf
  size: long
  #  slides: empty_slides.pdf
  abstract: |
    Recently the trend of companies switching from microservice back to monolith has increased, leading to intense debate in the industry. We conduct a multivocal literature review, to investigate reasons for the phenomenon and key aspects to pay attention to during the switching back and analyze the opinions of other practitioners. The results pave the way for further research and provide guidance for industrial companies switching from microservice back to monolith.
# 7
- authors:
    - Lena Gregor (Presenting)
    - Alexander Pretschner
    - Anja Hentschel
    - Horst Sauer 
    - Matthias Saft
  title: "The Fault in Our Services: Investigating Integration-Relevant Faults in Microservices"
  paper: 13-gregor-fault-microservices.pdf
  size: long
  #  slides: empty_slides.pdf
  abstract: |
    Microservices architecture has revolutionized software development, offering scalability, agility, and maintainability. However, integrating multiple microservices presents challenges, with faults impacting system reliability and performance. Testing the integration process is vital to ensure seamless functioning, but knowledge about integration faults in microservice-based systems is limited. Existing taxonomies focus on non-functional attributes and lack structure for efficient test strategy development. In this extended abstract, we present our work in progress to address this gap. Our approach involves adapting a Service-Oriented Architecture (SOA) fault taxonomy to the microservices context, enriching it through practitioner interviews, and validating it through a survey. By creating a structured overview of faults relevant to service integration, our aim is to empower practitioners and researchers in developing efficient testing strategies and assessments.
# 8
- authors:
    - Jonas Sorgalla (Presenting) 
  title: What Microservice Teams Need to Know of Each Other
  paper: 18-sorgalla-microservices-teams.pdf
  size: long
  #  slides: empty_slides.pdf
  abstract: |
    Building microservice-based applications inherently becomes an effort of multiple teams collaborating to achieve a common goal. While previous research has shown that the necessary alignment of organization and software architecture is a major challenge in the application of microservices, the act of collaboration has not been researched in detail. Therefore, we conduct a first qualitative study comprising five experts on which types of information should be shared between teams for successful microservice development. Our results show that the planned evolution of a microservice and the affiliation to business processes are of primary concern when it comes to information that should be shared between teams. Our findings can be used in tool development, to cross-reference information sharing behavior in practice, as well as foundation for future quantitative research.
# 9
- authors:
    - Saverio Giallorenzo (Presenting)
    - Claudio Guidi
    - Luca Tagliavini 
  title: A Unifying, Lightweight Platform for Microservice and Serverless Deployments
  paper: 05-giallorenzo-unifying-platform.pdf
  size: long
  #  slides: empty_slides.pdf
  abstract: |
    Microservices and serverless functions are two popular architectural styles where applications are broken down into smaller units. Microservices are constantly available to handle requests, while functions are allocated per request. We present JFN, a platform that unifies the deployment of microservices and serverless functions, offering a lightweight solution for both styles of cloud architectures.  JFN addresses the challenge of optimizing costs and performance by dynamically deciding when to run functions as microservices when dealing with steady loads. To support the hybrid execution of microservices and serverless functions its results, JFN leverages constructs of the service-oriented language Jolie.
# 10
- authors:
    - Iqra Zafar (Presenting)
    - Christian M. Adriano
    - Finn Kaiser
    - Holger Giese 
  title: "STIGs: Spatio-Temporal Graphs for Expressing Microservice Interference" 
  paper: 10-zafar-stigs.pdf
  size: short
  #  slides: empty_slides.pdf
  abstract: |
    Microservices have gained significant popularity as a solution for
    developing large-scale applications in cloud environments, offering agility
    for evolving services and scalability for satisfying surges in user requests.
    However, in multi-tenant platforms, services often compete for resources,
    leading to a phenomenon called interference, which can affect multiple services and systems. Because interference propagates in complex anomaly
    patterns, it can bias (confounds) the diagnostics produced by methods like
    anomaly detection (AD) and root-cause analysis (RCA). Current interference
    mitigation (IM ) methods are effective to measure performance loss between
    competing services, but they are limited to pairs of services. Hence, these
    methods do not contemplate the propagation effects through multiple services and across systems. As a first step to address this limitation, we formalize a new model (Spatio-Temporal Interference Graph - STIG) and a corresponding algorithm to instantiate this model from execution trace data. We
    demonstrate our approach on two publicly available microservice applica tion benchmarks.
# 11
- authors:
    - Philip Wizenty (Presenting)
    - Francisco Ponce
    - Florian Rademacher
    - Jacopo Soldani
    - Hernán Astudillo
    - Sabine Sachweh 
  title: Towards Model-driven Resolving of Security Smells in Microservices
  paper: 15-wizenty-security-smell-resolution.pdf
  size: long
  #  slides: empty_slides.pdf
  abstract: |
    It is crucial to address security issues in microservice applications, as many IT companies rely on them to carry out their core businesses. Security smells can indicate possible symptoms of these security issues. However, detecting security smells and figuring out how to resolve them through refactoring can be complex and expensive due to the inherent complexity of microservice architectures. This paper presents the first idea for supporting a model-driven resolution of microservices' security smells. The proposed method involves using LEMMA to model microservice applications, with an extension to enable the modeling of their security aspects. This method allows for the automatic detection of security smells in modeled microservice applications and recommends the necessary refactorings to address them. To test the feasibility of this approach, a proof-of-concept implementation of the proposed LEMMA-based, automated microservices' security smell detection and refactoring is also introduced in this paper.
# 12
- authors:
    - Jonas Fritzsch (Presenting)
    - Filipe Correia
    - Justus Bogner
    - Stefan Wagner 
  title: "Tools for Refactoring to Microservices: A Preliminary Usability Report"
  paper: 12-fritzsch-tools-refactoring.pdf
  size: long
  #  slides: empty_slides.pdf
  abstract: |
    While Microservices are a preferred choice for modern cloud-based applications, the migration and architectural refactoring of existing legacy systems is still a major challenge in industry. To address this, academia has proposed many strategies and approaches that aim to automate the process of decomposing a monolith into functional units. In this study, we review existing migration approaches regarding techniques used and tool support. From 91 publications, we extracted 22 tools, 7 of which address service decomposition. To assess them from an end-user perspective, we investigated their underlying techniques, installation, documentation, usability and support. For 5 of them, we generated service cuts using reference applications. The results of our preliminary work suggest that the inspected tools pursue promising concepts, but lack maturity and generalizability for reliable use by industry.
# 13
- authors:
    - Pietro Ferrara (Presenting)
  title: "[Micro]services: threat, challenge, or opportunity for sound static program analysis?"
  paper: 07-ferrara-static-program-analysis.pdf
  size: long
  #  slides: empty_slides.pdf
  abstract: |
    Microservices represent an unique opportunity to revamp sound static analysis and its application to industrial software. However, several formal, technical, implementation, and cultural challenges must be addressed. In this talk, we will briefly introduced static program analysis and its application to industrial software during the last few decades, and then we will discuss the threats, challenges and opportunities of its application to the microservices world.
# 14
- authors:
    - Hugo Monfleur (Presenting)
    - Philippe Merle 
  title: Towards Concern-Oriented Microservice Architecture
  paper: 19-monfleur-concern-oriented-msa.pdf
  size: short
  #  slides: empty_slides.pdf
  abstract: |
    Existing microservice architecture languages do not allow for the
    distinction and expression of intertwined cross-cutting architectural concerns, i.e. aspects that affect several microservices, without the possibility
    of being encapsulated in any of them. To address this problem, this paper proposes the Concern-Oriented Microservice Architecture metamodel
    where cross-cutting architectural concerns are first-class citizens and show
    how the worldwide-used Docker Compose language can be equipped with
    new concern-oriented constructions. This extension is applied to the TeaStore microservice reference application.